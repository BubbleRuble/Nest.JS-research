generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Movie {
  id          String      @id @default(uuid())
  title       String
  description String?
  releaseYear Int
  rating      Float       @default(0.0)
  isAvailable Boolean     @default(false) @map("is_available")
  genre       MovieGenres @default(COMEDY)
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  posterId    String      @unique @map("poster_id")
  poster      MoviePoster @relation(fields: [posterId], references: [id])
  reviews     Review[]    @relation("movie_reviews")
  actors      Actor[]     @relation("movie_actors")

  @@map("movies")
}

model MoviePoster {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  movie     Movie?

  @@map("movie_posters")
}

model Review {
  id        String   @id @default(uuid())
  text      String
  rating    Decimal  @default(0.0)
  movieId   String   @map("movie_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  movie     Movie    @relation("movie_reviews", fields: [movieId], references: [id], onDelete: Cascade)

  @@map("reviews")
}

model Actor {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  movies    Movie[]  @relation("movie_actors")

  @@map("actors")
}

enum MovieGenres {
  ACTION
  COMEDY
  DRAMA
  HORROR

  @@map("enum_genres")
}
